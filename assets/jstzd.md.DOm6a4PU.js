import{_ as a,c as n,ag as t,o as e}from"./chunks/framework.Dhw7le90.js";const u=JSON.parse('{"title":"jstzd","description":"","frontmatter":{},"headers":[],"relativePath":"jstzd.md","filePath":"jstzd.md"}'),i={name:"jstzd.md"};function o(p,s,l,c,r,d){return e(),n("div",null,s[0]||(s[0]=[t(`<h1 id="jstzd" tabindex="-1">jstzd <a class="header-anchor" href="#jstzd" aria-label="Permalink to &quot;jstzd&quot;">​</a></h1><p>jstzd is a daemon service that orchestrates and manages the core components of the <code>jstz</code> local sandbox. It serves as the central coordinator for automatically setting up the necessary infrastructure, such as the jstz node and octez binaries, for running an instance of the jstz kernel</p><p>The core features are:</p><ul><li>Low block time and commitment period</li><li>Pre-loaded bootstrap accounts</li><li>Pre-deployed native bridge</li><li>Centralized configuration between jstz and octez</li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Start the daemon:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstzd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span></code></pre></div><p>If you see the following output, jstzd is running successfully</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>           __________</span></span>
<span class="line"><span>           \\  jstz  /</span></span>
<span class="line"><span>            )______(</span></span>
<span class="line"><span>            |&quot;&quot;&quot;&quot;&quot;&quot;|_.-._,.---------.,_.-._</span></span>
<span class="line"><span>            |      | | |               | | &#39;&#39;-.</span></span>
<span class="line"><span>            |      |_| |_             _| |_..-&#39;</span></span>
<span class="line"><span>            |______| &#39;-&#39; \`&#39;---------&#39;\` &#39;-&#39;</span></span>
<span class="line"><span>            )&quot;&quot;&quot;&quot;&quot;&quot;(</span></span>
<span class="line"><span>           /________\\</span></span>
<span class="line"><span>           \`&#39;------&#39;\`</span></span>
<span class="line"><span>         .------------.</span></span>
<span class="line"><span>        /______________\\</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        0.1.0-alpha.0 https://github.com/jstz-dev/jstz</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  +--------------------------------------+---------------------+</span></span>
<span class="line"><span>  | Address                              | XTZ Balance (mutez) |</span></span>
<span class="line"><span>  +======================================+=====================+</span></span>
<span class="line"><span>  | tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx | 60000000000         |</span></span>
<span class="line"><span>  +--------------------------------------+---------------------+</span></span>
<span class="line"><span>  | tz1TGu6TN5GSez2ndXXeDX6LgUDvLzPLqgYV | 40000000000         |</span></span>
<span class="line"><span>  +--------------------------------------+---------------------+</span></span></code></pre></div><p>By default, jstzd will start on port 54321. You can customize the configuration through a JSON configuration file:</p><p>For example, if you want to start jstzd on port 54320 and octez_node on port 3000, you can create a config.json file with the following content:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;server_port&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">54320</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;octez_node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;rpc_endpoint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost:3000&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Then start JSTZD with your config:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstzd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.json</span></span></code></pre></div><h2 id="api-endpoints" tabindex="-1">API Endpoints <a class="header-anchor" href="#api-endpoints" aria-label="Permalink to &quot;API Endpoints&quot;">​</a></h2><p>JSTZD provides endpoints to monitor the health, retrieve the configuration of the running processes, and shutdown the system:</p><ul><li><code>GET /health</code> - Check health status of all components</li><li><code>GET /config/</code> - Get full system configuration</li><li><code>GET /config/:config_type</code> - Get specific component config (e.g., jstz_node, octez_node)</li><li><code>PUT /shutdown</code> - Gracefully shutdown the system</li></ul><h2 id="bootstrap-accounts" tabindex="-1">Bootstrap Accounts <a class="header-anchor" href="#bootstrap-accounts" aria-label="Permalink to &quot;Bootstrap Accounts&quot;">​</a></h2><p>jstzd automatically sets up two bootstrap accounts with initial balances:</p><h3 id="rollup-operator-account" tabindex="-1">Rollup Operator Account <a class="header-anchor" href="#rollup-operator-account" aria-label="Permalink to &quot;Rollup Operator Account&quot;">​</a></h3><ul><li>Address: <code>tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx</code></li><li>Balance: 60,000,000,000 mutez</li></ul><h3 id="activator-account" tabindex="-1">Activator Account <a class="header-anchor" href="#activator-account" aria-label="Permalink to &quot;Activator Account&quot;">​</a></h3><ul><li>Address: <code>tz1TGu6TN5GSez2ndXXeDX6LgUDvLzPLqgYV</code></li><li>Balance: 40,000,000,000 mutez</li></ul><p>These accounts are used for initial setup and can be used for funding user accounts.</p>`,24)]))}const _=a(i,[["render",o]]);export{u as __pageData,_ as default};
